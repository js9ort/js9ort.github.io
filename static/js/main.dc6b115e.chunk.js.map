{"version":3,"sources":["Lesson.js","App.js","serviceWorker.js","index.js"],"names":["Lesson","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input_ref","React","createRef","current","select","document","execCommand","react_default","a","createElement","lesson","name","replace","description","className","ref","readOnly","type","placeholder","value","clone_url","onClick","copyToClipboard","bind","title","href","concat","html_url","target","rel","readme","dangerouslySetInnerHTML","__html","role","Component","GITHUB_TOKEN","atob","REPS_URL","App","state","reps","loading","map","item","src_Lesson_0","key","id","str","decodeURIComponent","escape","window","fetch","headers","Authorization","answer","json","filter","toLowerCase","includes","forEach","lesson_number","sort","b","setState","_ref","asyncToGenerator","regenerator_default","mark","_callee","readme_url","wrap","_context","prev","next","sent","content","_this2","b64_to_utf8","stop","_x","apply","arguments","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc6b115e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Lesson.css';\n\nclass Lesson extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.input_ref = React.createRef();\n\t\t\n\t}\n  \n\tcopyToClipboard(){\n\t\tthis.input_ref.current.select();\n\t\tdocument.execCommand(\"copy\");\n\t}\n\t  \n\trender() {\n\t\treturn (\n\t\t\t  <li>\n\t\t\t\t<h2>{this.props.lesson.name.replace(\"esson\", \"esson \")}</h2>\n\t\t\t\t<h4>{this.props.lesson.description}</h4>\n\t\t\t\t<div className=\"form-row mb-3\">\n\t\t\t\t<div className=\"col-md-6 mt-2\">\n\t\t\t\t  <input ref={this.input_ref} readOnly type=\"text\" className=\"form-control\" placeholder=\"GitHub URL\" value={this.props.lesson.clone_url} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-6 mt-2\">\n\t\t\t\t  <button onClick={this.copyToClipboard.bind(this)} className=\"btn btn-primary\" title=\"Copy To Clipboard\"><i className=\"far fa-copy\"></i></button>\n\t\t\t\t  &nbsp;\n\t\t\t\t  <a href={`x-github-client://openRepo/${this.props.lesson.html_url}`} className=\"btn btn-success\" title=\"Open In GitHub Desktop\"><i  className=\"fas fa-desktop\"></i></a> \n\t\t\t\t   &nbsp;\n\t\t\t\t  <a href={this.props.lesson.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-info\" title=\"Open In GitHub\"><i className=\"fab fa-github\"></i></a>\n\n\t\t\t\t   &nbsp;\n\t\t\t\t  <a href={this.props.lesson.html_url + `/raw/master/${this.props.lesson.name}.pdf`} className=\"btn btn-info\" title=\"Donwload PDF\"><i className=\"far fa-file-pdf\"></i></a>\n\t\t\t\t  \n\t\t\t\t   &nbsp;\n\t\t\t\t  <a href={this.props.lesson.html_url + \"/archive/master.zip\"} className=\"btn btn-info\" title=\"Donwload ZIP\"><i className=\"far fa-file-archive\"></i></a> \n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t  {this.props.lesson.readme ? <p className=\"montserrat\" dangerouslySetInnerHTML={{ __html: this.props.lesson.readme }} /> : <div className=\"spinner-border\" role=\"status\"></div>}\n\t\t\t  </li>\n\t\t);\n\t}\n}\n\nexport default Lesson;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Lesson from './Lesson';\r\n\r\nconst GITHUB_USER \t= \"js9ort\";\r\nconst GITHUB_TOKEN \t= atob(\"ZmE5NTljNmRjMjQ4M2IyOTA0M2ZlNjRkOGRkNzVmNDJmMWVkZmE2OQ==\");\r\n\r\nconst REPS_URL = `https://api.github.com/users/${GITHUB_USER}/repos`;\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n\t  super(props);\r\n\r\n\t  this.state = {\r\n\t\t  reps : [],\r\n\t\t  loading: true\r\n\t  }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n\t\t  <ul className=\"resume-list\">\r\n\t\t\t{this.state.reps.map(item => <Lesson key={item.id} lesson={item} />)}\r\n\t\t  </ul>\r\n\t\t  {this.state.loading ? \r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<div className=\"spinner-border\" role=\"status\"></div>\r\n\t\t\t</div> : \"\"}\r\n\t</div>\r\n    );\r\n  }\r\n  \r\n  b64_to_utf8( str ) {\r\n\t\tstr = str.replace(/\\s/g, '');    \r\n\t\treturn decodeURIComponent(escape(window.atob( str )));\r\n  }\r\n  \r\n  async componentDidMount(){\r\n\t  \tlet answer = await fetch(REPS_URL, {\r\n\t\t\theaders:{\r\n\t\t\t\t\"Authorization\": `token ${GITHUB_TOKEN}`\r\n\t\t\t}\r\n\t\t}); \r\n\t\t\t\t\r\n\t\tanswer = await answer.json();\r\n\t\t\r\n\t\tanswer = answer.filter(item => item.name.toLowerCase().includes(\"lesson\"));\r\n\t\t\r\n\t\tanswer.forEach(item => item.lesson_number = +item.name.replace(/\\D/g,'')); \r\n\t\t\r\n\t\tanswer.sort((a, b) => b.lesson_number - a.lesson_number);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\treps : answer,\r\n\t\t\tloading: false\r\n\t\t});\r\n\t\t\r\n\t\tanswer.forEach(async(item) => {\r\n\t\t\t\r\n\t\t\tlet readme_url = `https://api.github.com/repos/${GITHUB_USER}/${item.name}/readme`\r\n\t\t\t\r\n\t\t\tlet readme = await fetch(readme_url, { \r\n\t\t\t\theaders:{\r\n\t\t\t\t\t\"Authorization\": `token ${GITHUB_TOKEN}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treadme = await readme.json();\r\n\t\t\t\r\n\t\t\titem.readme = readme.content ? this.b64_to_utf8(readme.content).replace(/\\n+/g, \"<br />\") : \"-\";\r\n\t\t\t\r\n\t\t\tthis.setState({reps: answer});\r\n\t\t\t\r\n\t\t});\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}